<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/aop 
                http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 0 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 1 datasource -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 2配置JDBC模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- 默认必须使用数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- <constructor-arg> <ref bean="dataSource" /> </constructor-arg> -->
	</bean>

	<bean id="transMoney" class="book.ch8.jdbcTemplateTx.TransMoneyXmlTx">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>


	<!-- 4.事务管理器，依赖于数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 5.编写事务通知：对事务进行增强(通知),需要编写对切入点和具体执行事务细节 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- name：*表示任意方法名称 -->
			<tx:method name="*" 
					   propagation="REQUIRED" 
					   isolation="DEFAULT"
					   read-only="false" />
			<tx:method name="find*" 
					   propagation="REQUIRED" 
					   isolation="DEFAULT"
					   read-only="true" />
			<!-- 
				// 通过id查询
				public Account findAccountById(int id);
				// 查询所有账户
				public List<Account> findAllAccount();
			 -->
		</tx:attributes>
	</tx:advice>
	
	<!-- 6.编写aop，让spring自动对目标生成代理，需要使用AspectJ的表达式 -->
	<aop:config>
		<!-- 切入点 -->
		<aop:pointcut expression="execution(* book.ch8.jdbcTemplateTx.*.*(..))"
			id="txPointCut" />
		<!-- 切面：将切入点与通知整合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />
	</aop:config>
<!-- 
tx:advice用来指定事务应该遵循的规则
	tx:attributes-tx:method
aop:config
	aop:pointcut找哪些方法需要配置事务 
	aop:advisor用来结合具体的目标方法和应该遵守的事务规则
-->
</beans>